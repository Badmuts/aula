version: '3'
services:
  api-gateway:
    image: traefik
    ports:
      - "3000:80"
    volumes:
      - ./api-gateway.toml:/etc/traefik/traefik.toml

  app-web:
    build:
      context: .
      dockerfile: packages/app-web/Dockerfile
    image: badmuts/aula-app-web:${TAG:-latest}
    volumes:
      - '/usr/src/app/packages/app-web/node_modules'
      - './packages/app-web:/usr/src/app/packages/app-web'

  user-service:
    build:
      context: .
      dockerfile: packages/user/Dockerfile
    image: badmuts/aula-user:${TAG:-latest}
    volumes:
      - '/usr/src/app/packages/user/node_modules'
      - './packages/user:/usr/src/app/packages/user'
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ACCESS_TOKEN_PUBLIC=${ACCESS_TOKEN_PUBLIC}
      - ACCESS_TOKEN_PRIVATE=${ACCESS_TOKEN_PRIVATE}
      - REFRESH_TOKEN_PRIVATE=${REFRESH_TOKEN_PRIVATE}
      - REFRESH_TOKEN_PUBLIC=${REFRESH_TOKEN_PUBLIC}
      - RABBIT_HOST=rabbit
      - RABBIT_USER=root
      - RABBIT_PASSWORD=root
      - DB_HOST=user-db
      - DB_DATABASE=user
      - DB_USER=
      - DB_PASSWORD=
    command: npx nodemon --exec "npm --prefix packages/user start"
    depends_on:
      - user-db
      - rabbit

  user-db:
    image: mongo:4.1-xenial

  course-service:
    build:
      context: .
      dockerfile: packages/course/Dockerfile
    image: badmuts/aula-course:${TAG:-latest}
    volumes:
      - '/usr/src/app/packages/course/node_modules'
      - './packages/course:/usr/src/app/packages/course'
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ACCESS_TOKEN_PUBLIC=${ACCESS_TOKEN_PUBLIC}
      - RABBIT_HOST=rabbit
      - RABBIT_USER=root
      - RABBIT_PASSWORD=root
      - DB_HOST=course-db
      - DB_DATABASE=course
      - DB_USER=
      - DB_PASSWORD=
    command: npx nodemon --exec "npm --prefix packages/course start"
    depends_on:
      - course-db
      - rabbit

  course-db:
    image: mongo:4.1-xenial

  search-service:
    build:
      context: .
      dockerfile: packages/search/Dockerfile
    image: badmuts/aula-search:${TAG:-latest}
    volumes:
      - '/usr/src/app/packages/search/node_modules'
      - './packages/search:/usr/src/app/packages/search'
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ACCESS_TOKEN_PUBLIC=${ACCESS_TOKEN_PUBLIC}
      - RABBIT_HOST=rabbit
      - RABBIT_USER=root
      - RABBIT_PASSWORD=root
    command: npx nodemon --exec "npm --prefix packages/search start"
    depends_on:
      - elastic
      - rabbit

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2

  websocket-service:
    build:
      context: .
      dockerfile: packages/websocket/Dockerfile
    image: badmuts/aula-websocket:${TAG:-latest}
    volumes:
      - '/usr/src/app/packages/websocket/node_modules'
      - './packages/websocket:/usr/src/app/packages/websocket'
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ACCESS_TOKEN_PUBLIC=${ACCESS_TOKEN_PUBLIC}
      - RABBIT_HOST=rabbit
      - RABBIT_USER=root
      - RABBIT_PASSWORD=root
    command: npx nodemon --exec "npm --prefix packages/websocket start"
    depends_on:
      - rabbit

  rabbit:
    image: rabbitmq:management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=root
    ports:
      - "15672:15672"
