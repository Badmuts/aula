version: '3.4'
services:
  edge:
    image: traefik
    ports:
      - "3000:80"
    volumes:
      - ./edge.toml:/etc/traefik/traefik.toml

  tunnel:
    image: wernight/ngrok
    command: ngrok http edge:80

  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: web
    image: ${REPO:-badmuts}/aula-web:${TAG:-latest}
    environment:
      - NODE_ENV=dev
    command: npm run dev

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: auth
    image: ${REPO:-badmuts}/aula-auth:${TAG:-latest}
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ACCESS_TOKEN_PUBLIC=${ACCESS_TOKEN_PUBLIC}
      - ACCESS_TOKEN_PRIVATE=${ACCESS_TOKEN_PRIVATE}
      - REFRESH_TOKEN_PRIVATE=${REFRESH_TOKEN_PRIVATE}
      - REFRESH_TOKEN_PUBLIC=${REFRESH_TOKEN_PUBLIC}
      - NATS_HOST=nats
    depends_on:
      - nats

  user-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: user
    image: ${REPO:-badmuts}/aula-user:${TAG:-latest}
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ACCESS_TOKEN_PUBLIC=${ACCESS_TOKEN_PUBLIC}
      - DB_HOST=mongo
      - DB_DATABASE=user
      - DB_USER=
      - DB_PASSWORD=
      - NATS_HOST=nats
    depends_on:
      - mongo
      - nats

  course-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: course
    image: ${REPO:-badmuts}/aula-course:${TAG:-latest}
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ACCESS_TOKEN_PUBLIC=${ACCESS_TOKEN_PUBLIC}
      - DB_HOST=mongo
      - DB_DATABASE=course
      - DB_USER=
      - DB_PASSWORD=
      - NATS_HOST=nats
      - REDIS_HOST=cache
    depends_on:
      - mongo
      - nats

  search-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: search
    image: ${REPO:-badmuts}/aula-search:${TAG:-latest}
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ACCESS_TOKEN_PUBLIC=${ACCESS_TOKEN_PUBLIC}
      - NATS_HOST=nats
    depends_on:
      - elastic
      - nats

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2

  websocket-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: websocket
    image: ${REPO:-badmuts}/aula-websocket:${TAG:-latest}
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ACCESS_TOKEN_PUBLIC=${ACCESS_TOKEN_PUBLIC}
      - NATS_HOST=nats
    depends_on:
      - nats

  nats:
    image: nats:1.3.0

  mongo:
    image: mongo:4.1-xenial

  cache:
    image: redis
